# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'avaluo.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from qgis.PyQt.QtWidgets import *
from .funcBaseDatos import fnConexionServidor, fnConexionCerrar, fnConexionServidorPg, fnConexionCerrarPg
from qgis.core import QgsRasterLayer, QgsProject,QgsDataSourceUri
from qgis.core import Qgis
from qgis.core import *
import psycopg2
def convert(in_data):
    def cvt(data):
        try:
            return ast.literal_eval(data)
        except Exception:
            return str(data)
    return tuple(map(cvt, in_data))

class Ui_Dialog(object):
    def setupUi(self, Dialog):

        def avaluoclick():
            clvcatastral = self.mLineEdit.text()
            print("clickventana2")
            print(clvcatastral)
            try:
                con = fnConexionServidorPg()
                #con = psycopg2.connect(database='postgis_geo', user='postgres',password='taQ99Zm')
                cur = con.cursor()
                cur.execute("SELECT nogales_catastro.cortes()")
                con.commit()
                
            except psycopg2.DatabaseError as e:
                    print(f'Error {e}')

            fnConexionCerrarPg(con)
            uri = fnUri()
            uri.setDataSource("nogales_catastro", "predio_calculos", "geom")
            layer = QgsVectorLayer(uri.uri(), "predio_calculos", "postgres")
            QgsProject.instance().addMapLayer(layer)

            db = psycopg2.connect(database='postgis', port='5432', user='postgres',password='n0g@p0stg35')
            with db:
              cur = db.cursor()
              # tabla         
              rows = cur.execute("SELECT zona, valorz, valorb, area FROM nogales_catastro.predio_calculos ")
              data = cur.fetchall()
              valorT = 0
              valoresZb = []
              terreno = 0
              print ('Gestion y Catastral: ' + clvcatastral)
              for row in data:
                  if row[1]:
                     zona=row[1]
                     print("if",zona)
                  else:
                      zona=0
                      print("else",zona)
                  if row[2]:
                      banda=row[2]
                      print("if",banda)
                  else:
                      banda=0  
                      print("else",banda) 
                  
                  

                  if zona < banda :
                      valoresZb.append(row[2])
                      valorT+= banda*row[3]
                  else:
                      valoresZb.append(row[1])
                      valorT+= zona*row[3]
                  terreno+=row[3] 
                  print(max(valoresZb))
                  print(valorT)
                
                  add_table(convert(row))
                
              valorUG=valorT/terreno
              fsctorI=valorUG/max(valoresZb)
              print("valor Unitario",valorUG)
              self.mLineEdit_2.setText(str(valorUG))
              print("Factor irregularidad",fsctorI)
              self.mLineEdit_3.setText(str(fsctorI))
              
              cur.close()

        def add_table(columns):
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)         #insert new row
            for i, column in enumerate(columns):
               self.tableWidget.setItem(rowPosition, i, QtWidgets.QTableWidgetItem(str(column)))
        



        Dialog.setObjectName("Actualizar Avaluo")
        Dialog.resize(425, 333)
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setGeometry(QtCore.QRect(180, 270, 211, 21))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        
        #########
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        #self.tableWidget.setGeometry(QtCore.QRect(35, 21, 731, 401))
        self.tableWidget.setGeometry(QtCore.QRect(10, 70, 400, 130))
        #self.tableWidget.setRowCount(6)
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setHorizontalHeaderLabels(['Zona', 'VZona','Vbanda','Area'])
        self.tableWidget.setObjectName("tableWidget")
        ####################
        
        #self.tableView = QtWidgets.QTableView(Dialog)
        #self.tableView.setGeometry(QtCore.QRect(40, 70, 281, 91))
        #self.tableView.setObjectName("tableView")
        
        ##########
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(50, 20, 81, 16))
        self.label.setObjectName("label")
        self.mLineEdit = QtWidgets.QLineEdit(Dialog)
        self.mLineEdit.setGeometry(QtCore.QRect(40, 40, 121, 21))
        self.mLineEdit.setProperty("qgisRelation", "")
        self.mLineEdit.setObjectName("mLineEdit")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(190, 40, 111, 21))
        self.pushButton.setObjectName("pushButton")
        self.mLineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.mLineEdit_2.setGeometry(QtCore.QRect(160, 210, 131, 21))
        #self.mLineEdit_2.setProperty("qgisRelation", "")
        self.mLineEdit_2.setObjectName("mLineEdit_2")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(20, 210, 111, 20))
        self.label_2.setObjectName("label_2")
        self.mLineEdit_3 = QtWidgets.QLineEdit(Dialog)
        self.mLineEdit_3.setGeometry(QtCore.QRect(160, 240, 131, 21))
        #self.mLineEdit_3.setProperty("qgisRelation", "")
        self.mLineEdit_3.setObjectName("mLineEdit_3")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(20, 240, 111, 20))
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(Dialog.accept)
        self.buttonBox.rejected.connect(Dialog.reject)
        self.pushButton.clicked.connect(avaluoclick)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "Clave Catastral"))
        self.label_2.setText(_translate("Dialog", "Valor Unitario General"))
        self.label_3.setText(_translate("Dialog", "Factor de Irregularidad"))
        self.pushButton.setText(_translate("Dialog", "Actualizar avalÃºo"))

    

from qgsfilterlineedit import QgsFilterLineEdit


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
